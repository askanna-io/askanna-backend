stages:
  - build-base
  - build-deploy
  - test
  - deploy
  - cleanup

include:
  - template: Code-Quality.gitlab-ci.yml

.test-base:
  stage: test
  image: $CI_REGISTRY_IMAGE/base:master
  needs:
    - job: build_master_base
      optional: true
  tags:
    - kubernetes
  variables:
    DJANGO_SECRET_KEY: $CI_COMMIT_SHA
    DJANGO_ALLOWED_HOSTS: "*"
    DJANGO_EMAIL_BACKEND: django.core.mail.backends.locmem.EmailBackend
    DJANGO_SECURE_SSL_REDIRECT: "False"
    REDIS_URL: redis://redis:6379/0
    CELERY_BROKER_URL: $REDIS_URL
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    POSTGRES_USER: anna
    POSTGRES_PASSWORD: pass
    POSTGRES_DB: askanna_backend
    POSTGRES_DB_RUNINFO: askanna_runinfo
  services:
    - name: postgres:12
      alias: postgres
    - name: redis:5
      alias: redis

pytest:
  extends: .test-base
  before_script:
    - pip install -r requirements/local.txt
  script:
    - pytest --cov=askanna_backend --cov-report=xml --junitxml=report.junit.xml
    - cat coverage.xml | sed -e "s.filename=\".filename=\"askanna_backend/.g" > report.coverage.xml
    - coverage html
    - coverage report
  coverage: '/TOTAL\s+\d+\s+\d+\s+\d+\s+\d+\s+([\d\.]+)\%/'
  artifacts:
    expire_in: 2 weeks
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
    paths:
      - htmlcov/
    reports:
      cobertura: report.coverage.xml
      junit: report.junit.xml

migrations:
  extends: .test-base
  before_script:
    - pip install -r requirements/base.txt
  script:
    - python manage.py makemigrations --dry-run --check --no-input

code_quality:
  stage: test
  tags:
    - docker

.build_base:
  stage: build-base
  tags:
    - kubernetes
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/compose/Dockerfile-base --destination ${CI_REGISTRY_IMAGE}/base:$CI_COMMIT_REF_NAME

build_master_base:
  extends: .build_base
  only:
    refs:
      - master
    changes:
      - compose/Dockerfile-base
      - requirements/base.txt
      - requirements/production.txt

build_branches_base:
  extends: .build_base
  when: manual

build_deploy:
  stage: build-deploy
  tags:
    - kubernetes
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/compose/production/django/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

.deploy-variables:
  variables:
    GIT_STRATEGY: none
    ASKANNA_DEPLOY_BRANCH: main
    ASKANNA_DEPLOY_PRODUCT: askanna-backend

.deploy:
  stage: deploy
  image: curlimages/curl
  extends: .deploy-variables
  tags:
    - kubernetes
  script:
    - curl -X POST -F token=${CI_JOB_TOKEN} -F ref=${ASKANNA_DEPLOY_BRANCH} -F variables[product]=${ASKANNA_DEPLOY_PRODUCT} -F variables[branch]=${CI_COMMIT_REF_SLUG} -F variables[action]=deploy -F variables[slug]=${CI_ENVIRONMENT_SLUG} ${ASKANNA_DEPLOY_TRIGGER}

deploy_branch:
  extends: .deploy
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://${CI_ENVIRONMENT_SLUG}-api.askanna.eu/v1/docs/swagger
    on_stop: stop_review
  except:
    refs:
      - master

deploy_master:
  extends: .deploy
  environment:
    name: master
    url: https://api.askanna.eu/v1/docs/swagger
  only:
    refs:
      - master

stop_review:
  stage: cleanup
  image: curlimages/curl
  extends: .deploy-variables
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  when: manual
  allow_failure: true
  tags:
    - kubernetes
  script:
    - curl -X POST -F token=${CI_JOB_TOKEN} -F ref=${ASKANNA_DEPLOY_BRANCH} -F variables[product]=${ASKANNA_DEPLOY_PRODUCT} -F variables[branch]=${CI_COMMIT_REF_SLUG} -F variables[action]=undeploy -F variables[slug]=${CI_ENVIRONMENT_SLUG} ${ASKANNA_DEPLOY_TRIGGER}
  except:
    - master
    - beta
