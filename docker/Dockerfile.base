FROM python:3.11-slim-bookworm AS python

ARG BUILD_ENVIRONMENT=production

ENV PYTHONUNBUFFERED=yes
ENV PYTHONDONTWRITEBYTECODE=yes
ENV BUILD_ENV=${BUILD_ENVIRONMENT}

# ---------------------------------------------------------------------------------------------------------------------
# Build Python Wheel archives to speed up future builds
FROM python AS build-wheels

RUN apt-get update && apt-get install --no-install-recommends --assume-yes \
    # Dependency for building Python wheels
    build-essential \
    # Psycopg2 dependency
    libpq-dev

COPY ./requirements .

# Build Python wheels for all requirements for the build environment
RUN pip install --upgrade pip && \
    pip wheel --no-cache-dir --wheel-dir /usr/src/app/wheels --requirement ${BUILD_ENVIRONMENT}.txt

# ---------------------------------------------------------------------------------------------------------------------
# Application base image
FROM python AS base

RUN addgroup --system django \
    && adduser --system --no-create-home --ingroup django django

RUN apt-get update \
    && apt-get install --no-install-recommends --assume-yes \
      # Psycopg2 dependency
      libpq-dev \
      # Pillow dependencies
      libtiff5-dev libjpeg62-turbo-dev libopenjp2-7-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev \
      tcl8.6-dev tk8.6-dev python3-tk libharfbuzz-dev libfribidi-dev libxcb1-dev \
      # Python-magic depencency
      libmagic-dev \
    # Cleaning up unused files
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && rm -rf /var/lib/apt/lists/*

# Use wheels from build-stage to install python dependencies
COPY --from=build-wheels /usr/src/app/wheels /wheels/
RUN pip install --upgrade pip \
    && pip install --no-cache-dir --no-index --find-links=/wheels/ /wheels/* \
    && rm -rf /wheels/
