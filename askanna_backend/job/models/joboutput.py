# -*- coding: utf-8 -*-
import json
import os
import uuid

from django.db import models
from django.conf import settings
from django.contrib.postgres.fields import JSONField
from django.utils.module_loading import import_string

from core.fields import JSONField  # noqa
from core.models import BaseModel, SlimBaseModel

from job.settings import JOB_BACKENDS  # noqa
from job.models.const import JOB_STATUS


class JobOutput(SlimBaseModel):
    """
    Includes the result and any other output generated by the job.

    FIXME:
        - did not add modified field, since sounds as if the output should be
          acting as read-only, needs review
        - add the jobdef uuid, since it might be used to fetch all ouputs
          for a given jobdef, withouth having to pass through the JobRun
          object.
    """

    jobdef = models.UUIDField(blank=True, null=True, editable=False)
    jobrun = models.OneToOneField(
        "job.JobRun",
        on_delete=models.DO_NOTHING,
        to_field="uuid",
        related_name="output",
    )
    exit_code = models.IntegerField(default=0)
    return_payload = JSONField(blank=True, null=True)
    stdout = JSONField(blank=True, null=True)

    # FIXME: see what name to use, since there might be a conflict with
    # the permission system.
    # FIXME: replace with reference to User Object.
    owner = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        verbose_name = "Job Output"
        verbose_name_plural = "Job Outputs"
